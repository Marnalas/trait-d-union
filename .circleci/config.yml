defaults: &defaults
  docker:
    - image: circleci/node:10-browsers
      environment:
        JOBS: 1
  working_directory: ~/project

version: 2
jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - .

  install_dependencies:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - front-node10-v1-{{ checksum "front/package-lock.json" }}
      - run: cd front && npm config set spin false
      - run:
          name: NPM Install
          command: cd front && npm install
      - save_cache:
          key: front-node10-v1-{{ checksum "front/package-lock.json" }}
          paths:
            - ~/project/front/node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: echo 'export PATH=~/project/front/node_modules/.bin:$PATH' >> $BASH_ENV
      - run:
          name: Lint Handlebars
          command: cd front && npm run lint:hbs
      - run:
          name: Lint JavaScript
          command: cd front && npm run lint:js

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: echo 'export PATH=~/project/front/node_modules/.bin:$PATH' >> $BASH_ENV
      - run:
          name: Run Tests
          command: cd front && npm run test

  deploy:
    <<: *defaults
    steps:
      - add_ssh_keys:
          fingerprints:
            - "17:26:2d:c8:49:c4:19:cc:83:83:78:91:9c:75:e9:d3"
      - run:
          name: Deploy to scalingo production instance
          command: git push git@scalingo.com:traitdunion.git $CIRCLE_SHA1:master

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - install_dependencies:
          requires:
            - checkout_code
      - lint:
          requires:
            - install_dependencies
      - test:
          requires:
            - install_dependencies
      - deploy:
          requires:
            - lint
            - test
